/* based on ORSCF SubjectData Contract v1.9.0.0 */


export class StringValueCriteria {
  
  /**
   * The value to match.
   */
  public value: string = '';
  
  /**
   * Enables, that the given value can just be a substring within the content of the target field. DEFAULT (if this is undefined or null) is 'false'.
   */
  public matchSubstring?: boolean;
  
}

export class StringFieldFilter {
  
  /**
   * Specifies one or more values to match. DEFAULT (if this is undefined or null) will include everything (but NULL) to enable filtering based on 'excluded values'. An empty array which just has no elements will be treaded as valid input and results in no value matching, so this only makes sense when including NULL instead (if supported). An array containing multiple elements, will require at least ONE of the criteria to match (OR-linked)!
   */
  public includedValues?: StringValueCriteria[];
  
  /**
   * Specifies one or more values to be removed from the result set which was evaulated using the 'included values'. DEFAULT (if this is undefined or null) will just leave the filtering based on 'included values'. An empty array which just has no elements will also be ignored. An array containing multiple elements, will require at least ONE of the criteria to match (OR-linked)!
   */
  public excludedValues?: StringValueCriteria[];
  
  /**
   * Enables, that the included and excluded values are processed case-insenstive. DEFAULT (if this is undefined or null) is 'false'.
   */
  public ignoreCasing?: boolean;
  
  /**
   * Negates the outcome of the whole filter. DEFAULT (if this is undefined or null) is 'false'.
   */
  public negate?: boolean;
  
}

/**
 * Declares, how the corresponding 'value' should be compared. DEFAULT (if this is undefined or null) is 'Equal'(1).
 */
export enum RangeMatchingBehaviour {
  /** Matching only the exactly given value. (DEFAULT) */
  Equal = 1,
  /** Matching all values lower than the given value. */
  Less = 2,
  /** Matching the given value or any value lower than it. */
  LessOrEqual = 3,
  /** Matching all values more than the given value. */
  More = 4,
  /** Matching the given value or any value more than it. */
  MoreOrEqual = 5
}

/**
 * Declares, which portion of the corresponding 'value' should be compared. DEFAULT (if this is undefined or null) is 'Date'(3).
 */
export enum DateMatchingPrecision {
  /** Matching only the YEAR portion of the given value. */
  Year = 1,
  /** Matching the YEAR and MONTH portion of the given value. */
  YearAndMonth = 2,
  /** Matching the DATE (year+month+day) portion of the given value. (DEFAULT) */
  Date = 3,
  /** Matching the complete DATE and TIME of the given value. */
  DateAndTime = 4
}

export class SubjectMetaRecord {
  
  /**
   * An [Universally Unique Identifier](https://de.wikipedia.org/wiki/Universally_Unique_Identifier) which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
   */
  public subjectUid: string = '';
  
  /**
   * identity of the patient which is usually a pseudonym from a corr. 'IdentiyManagementSystem' (the exact semantic is defined per study) *this field has a max length of 100
   */
  public subjectIdentifier: string = '';
  
  public studyUid: string = '';
  
  public actualSiteUid: string = '';
  
  /**
   * This is an internal managed field, which is related to the state of records dedicated to the database. It will be automatically set when a record is archived. A mapping during data import requires opt-in.
   */
  public isArchived: boolean = false;
  
  /**
   * This is an internal managed field (UNIX-Timestamp), which is related to the state of records dedicated to the database. It will be automatically set to the current time when a record is created, updated, archived or unarchived, but cannot be updated from outside and must not be mapped during data imports.
   */
  public modificationTimestampUtc: number = 0;
  
}

export class CustomFieldDescriptor {
  
  public technicalName: string = '';
  
  public isRequired: boolean = false;
  
  public displayLabel: string = '';
  
  public inputDescription?: string;
  
  public defaultValue?: string;
  
  public presets?: string[];
  
  public presetsOnly?: boolean;
  
  public regularExpression?: string;
  
}

export class SubjectFields extends SubjectMetaRecord {
  
  public enrollingSiteUid: string = '';
  
  /**
   * AS DECLARED BY [HL7.ResearchSubjectStatus](https://www.hl7.org/fhir/valueset-research-subject-status.html): candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn
   */
  public status: string = '';
  
  /**
   * a note (manually written text) which provides some additional information about the reason why one transitioned to the current status
   */
  public statusNote?: string;
  
  public periodStart?: Date;
  
  public periodEnd?: Date;
  
  public assignedArm?: string;
  
  public actualArm?: string;
  
  public substudyNames?: string[];
  
  /**
   * This can be the ID ('surrogate-key') of the Partient record within a site specific patient management system. This MUST NOT be any natural key or plain readable name which exposes the identity of the patient!
   */
  public actualSiteDefinedPatientIdentifier?: string;
  
  /**
   * Custom fields as defined by the Service. Call 'GetCustomFieldDescriptors' to get information about supported/required fields. Any passed values for undefined fields will be ignored.
   */
  public customFields?: Object;
  
  /**
   * An [Universally Unique Identifier](https://de.wikipedia.org/wiki/Universally_Unique_Identifier) which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
   */
  public subjectUid: string = '';
  
  /**
   * identity of the patient which is usually a pseudonym from a corr. 'IdentiyManagementSystem' (the exact semantic is defined per study) *this field has a max length of 100
   */
  public subjectIdentifier: string = '';
  
  public studyUid: string = '';
  
  public actualSiteUid: string = '';
  
  /**
   * This is an internal managed field, which is related to the state of records dedicated to the database. It will be automatically set when a record is archived. A mapping during data import requires opt-in.
   */
  public isArchived: boolean = false;
  
  /**
   * This is an internal managed field (UNIX-Timestamp), which is related to the state of records dedicated to the database. It will be automatically set to the current time when a record is created, updated, archived or unarchived, but cannot be updated from outside and must not be mapped during data imports.
   */
  public modificationTimestampUtc: number = 0;
  
}

export class SubjectStructure extends SubjectFields {
  
  public enrollingSiteUid: string = '';
  
  /**
   * AS DECLARED BY [HL7.ResearchSubjectStatus](https://www.hl7.org/fhir/valueset-research-subject-status.html): candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn
   */
  public status: string = '';
  
  /**
   * a note (manually written text) which provides some additional information about the reason why one transitioned to the current status
   */
  public statusNote?: string;
  
  public periodStart?: Date;
  
  public periodEnd?: Date;
  
  public assignedArm?: string;
  
  public actualArm?: string;
  
  public substudyNames?: string[];
  
  /**
   * This can be the ID ('surrogate-key') of the Partient record within a site specific patient management system. This MUST NOT be any natural key or plain readable name which exposes the identity of the patient!
   */
  public actualSiteDefinedPatientIdentifier?: string;
  
  /**
   * Custom fields as defined by the Service. Call 'GetCustomFieldDescriptors' to get information about supported/required fields. Any passed values for undefined fields will be ignored.
   */
  public customFields?: Object;
  
  /**
   * An [Universally Unique Identifier](https://de.wikipedia.org/wiki/Universally_Unique_Identifier) which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
   */
  public subjectUid: string = '';
  
  /**
   * identity of the patient which is usually a pseudonym from a corr. 'IdentiyManagementSystem' (the exact semantic is defined per study) *this field has a max length of 100
   */
  public subjectIdentifier: string = '';
  
  public studyUid: string = '';
  
  public actualSiteUid: string = '';
  
  /**
   * This is an internal managed field, which is related to the state of records dedicated to the database. It will be automatically set when a record is archived. A mapping during data import requires opt-in.
   */
  public isArchived: boolean = false;
  
  /**
   * This is an internal managed field (UNIX-Timestamp), which is related to the state of records dedicated to the database. It will be automatically set to the current time when a record is created, updated, archived or unarchived, but cannot be updated from outside and must not be mapped during data imports.
   */
  public modificationTimestampUtc: number = 0;
  
}

/**
 * A structure containing HL7/FHIR-Ressources (JSON only) and the essential fields which are required to qualify a ORSCF record.
 */
export class SubjectFhirRessourceContainer extends SubjectMetaRecord {
  
  /**
   * a HL7 ['ResearchSubject'](https://www.hl7.org/fhir/researchsubject.html) resource in json format
   */
  public researchSubjectRessource?: Object;
  
  /**
   * An [Universally Unique Identifier](https://de.wikipedia.org/wiki/Universally_Unique_Identifier) which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
   */
  public subjectUid: string = '';
  
  /**
   * identity of the patient which is usually a pseudonym from a corr. 'IdentiyManagementSystem' (the exact semantic is defined per study) *this field has a max length of 100
   */
  public subjectIdentifier: string = '';
  
  public studyUid: string = '';
  
  public actualSiteUid: string = '';
  
  /**
   * This is an internal managed field, which is related to the state of records dedicated to the database. It will be automatically set when a record is archived. A mapping during data import requires opt-in.
   */
  public isArchived: boolean = false;
  
  /**
   * This is an internal managed field (UNIX-Timestamp), which is related to the state of records dedicated to the database. It will be automatically set to the current time when a record is created, updated, archived or unarchived, but cannot be updated from outside and must not be mapped during data imports.
   */
  public modificationTimestampUtc: number = 0;
  
}

export class BatchableSubjectMutation {
  
  /**
   * AS DECLARED BY [HL7.ResearchSubjectStatus](https://www.hl7.org/fhir/valueset-research-subject-status.html): candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn
   */
  public status?: string;
  
  public assignedArm?: string;
  
  public actualArm?: string;
  
  public periodStart?: Date;
  
  public periodEnd?: Date;
  
  /**
   * Custom fields as defined by the Service. Call 'GetCustomFieldDescriptors' to get information about supported/required fields. Any passed values for undefined fields will be ignored.
   */
  public customFields?: Object;
  
}

export class UidFieldFilter {
  
  /**
   * Specifies one or more values to match. DEFAULT (if this is undefined or null) will include everything (but NULL) to enable filtering based on 'excluded values'. An empty array which just has no elements will be treaded as valid input and results in no value matching, so this only makes sense when including NULL instead (if supported). An array containing multiple elements, will require at least ONE of the criteria to match (OR-linked)!
   */
  public includedValues?: StringValueCriteria[];
  
  /**
   * Specifies one or more values to be removed from the result set which was evaulated using the 'included values'. DEFAULT (if this is undefined or null) will just leave the filtering based on 'included values'. An empty array which just has no elements will also be ignored. An array containing multiple elements, will require at least ONE of the criteria to match (OR-linked)!
   */
  public excludedValues?: StringValueCriteria[];
  
  /**
   * Negates the outcome of the whole filter. DEFAULT (if this is undefined or null) is 'false'.
   */
  public negate?: boolean;
  
}

export class DateValueCriteria {
  
  /**
   * The value to match.
   */
  public value: number = 0;
  
  /**
   * Declares, how the corresponding 'value' should be compared. DEFAULT (if this is undefined or null) is 'Equal'(1).
   */
  public matchingBehaviour?: RangeMatchingBehaviour;
  
  /**
   * Declares, which portion of the corresponding 'value' should be compared. DEFAULT (if this is undefined or null) is 'Date'(3).
   */
  public matchingPrecision?: DateMatchingPrecision;
  
}

export class SubjectMutation extends BatchableSubjectMutation {
  
  /**
   * a note (manually written text) which provides some additional information about the reason why one transitioned to the current status
   */
  public statusNote?: string;
  
  public substudyNames?: string[];
  
  /**
   * This can be the ID ('surrogate-key') of the Partient record within a site specific patient management system. This MUST NOT be any natural key or plain readable name which exposes the identity of the patient!
   */
  public actualSiteDefinedPatientIdentifier?: string;
  
  /**
   * AS DECLARED BY [HL7.ResearchSubjectStatus](https://www.hl7.org/fhir/valueset-research-subject-status.html): candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn
   */
  public status?: string;
  
  public assignedArm?: string;
  
  public actualArm?: string;
  
  public periodStart?: Date;
  
  public periodEnd?: Date;
  
  /**
   * Custom fields as defined by the Service. Call 'GetCustomFieldDescriptors' to get information about supported/required fields. Any passed values for undefined fields will be ignored.
   */
  public customFields?: Object;
  
}

export class DateFieldFilter {
  
  /**
   * Specifies one or more values to match. DEFAULT (if this is undefined or null) will include everything (but NULL) to enable filtering based on 'excluded values'. An empty array which just has no elements will be treaded as valid input and results in no value matching, so this only makes sense when including NULL instead (if supported). An array containing multiple elements, will require at least ONE of the criteria to match (OR-linked)!
   */
  public includedValues?: DateValueCriteria[];
  
  /**
   * Specifies one or more values to be removed from the result set which was evaulated using the 'included values'. DEFAULT (if this is undefined or null) will just leave the filtering based on 'included values'. An empty array which just has no elements will also be ignored. An array containing multiple elements, will require at least ONE of the criteria to match (OR-linked)!
   */
  public excludedValues?: DateValueCriteria[];
  
  /**
   * Negates the outcome of the whole filter. DEFAULT (if this is undefined or null) is 'false'.
   */
  public negate?: boolean;
  
}

export class SubjectFilter {
  
  public studyUid?: UidFieldFilter;
  
  public siteUid?: UidFieldFilter;
  
  /**
   * identity of the patient which is usually a pseudonym from a corr. 'IdentiyManagementSystem' (the exact semantic is defined per study) *this field has a max length of 100
   */
  public subjectIdentifier?: StringFieldFilter;
  
  /**
   * AS DECLARED BY [HL7.ResearchSubjectStatus](https://www.hl7.org/fhir/valueset-research-subject-status.html): candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn
   */
  public status?: StringFieldFilter;
  
  public periodStart?: DateFieldFilter;
  
  public periodEnd?: DateFieldFilter;
  
  public assignedArm?: StringFieldFilter;
  
  public actualArm?: StringFieldFilter;
  
  public substudyName?: StringFieldFilter;
  
  /**
   * This can be the ID ('surrogate-key') of the Partient record within a site specific patient management system. This MUST NOT be any natural key or plain readable name which exposes the identity of the patient!
   */
  public actualSiteDefinedPatientIdentifier?: StringFieldFilter;
  
  /**
   * Custom fields as defined by the Service. Call 'GetCustomFieldDescriptors' to get information about supported/required fields. Any passed values for undefined fields will be ignored.
   */
  public customFields?: Object;
  
}
